apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "1"
    meta.helm.sh/release-name: aws-cloudwatch-metrics
    meta.helm.sh/release-namespace: amazon-cloudwatch
  generation: 1
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aws-cloudwatch-metrics
    app.kubernetes.io/version: "1.247350"
    helm.sh/chart: aws-cloudwatch-metrics-0.0.9
  name: aws-cloudwatch-metrics
  namespace: amazon-cloudwatch
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: aws-cloudwatch-metrics
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: aws-cloudwatch-metrics
    spec:
      containers:
      - env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: HOST_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CI_VERSION
          value: k8s/1.3.9
        image: amazon/cloudwatch-agent:1.247350.0b251780
        imagePullPolicy: IfNotPresent
        name: aws-cloudwatch-metrics
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 200m
            memory: 200Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/cwagentconfig
          name: cwagentconfig
        - mountPath: /rootfs
          name: rootfs
          readOnly: true
        - mountPath: /var/run/docker.sock
          name: dockersock
          readOnly: true
        - mountPath: /var/lib/docker
          name: varlibdocker
          readOnly: true
        - mountPath: /run/containerd/containerd.sock
          name: containerdsock
          readOnly: true
        - mountPath: /sys
          name: sys
          readOnly: true
        - mountPath: /dev/disk
          name: devdisk
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: aws-cloudwatch-metrics
      serviceAccountName: aws-cloudwatch-metrics
      terminationGracePeriodSeconds: 60
      volumes:
      - configMap:
          defaultMode: 420
          name: aws-cloudwatch-metrics
        name: cwagentconfig
      - hostPath:
          path: /
          type: ""
        name: rootfs
      - hostPath:
          path: /var/run/docker.sock
          type: ""
        name: dockersock
      - hostPath:
          path: /var/lib/docker
          type: ""
        name: varlibdocker
      - hostPath:
          path: /run/containerd/containerd.sock
          type: ""
        name: containerdsock
      - hostPath:
          path: /sys
          type: ""
        name: sys
      - hostPath:
          path: /dev/disk/
          type: ""
        name: devdisk
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
